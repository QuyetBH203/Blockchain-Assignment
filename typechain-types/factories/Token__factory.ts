/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052346100f057600061001581546100f5565b601f81116100c6575b507f4d79204861726468617420546f6b656e0000000000000000000000000000002081556001805461004f906100f5565b601f811161009a575b5060066213521560ea1b0190556040620f42409182600255338152600460205220553360018060a01b0319600354161760035560405161061790816101308239f35b81835281601f60208520920160051c8201915b8281106100bb575050610058565b8481550182906100ad565b818052601f60208320910160051c8101905b8181106100e5575061001e565b8281556001016100d8565b600080fd5b90600182811c92168015610125575b602083101461010f57565b634e487b7160e01b600052602260045260246000fd5b91607f169161010456fe60806040526004361015610013575b600080fd5b6000803560e01c90816306fdde031461008e5750806318160ddd1461008557806370a082311461007c5780638da5cb5b1461007357806395d89b411461006a5763a9059cbb1461006257600080fd5b61000e6103d1565b5061000e6102d9565b5061000e6102af565b5061000e610274565b5061000e61023f565b346100b957806003193601126100b9576100b56100a9610103565b6040519182918261022e565b0390f35b80fd5b50634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176100f657604052565b6100fe6100bc565b604052565b6040516000805490600182811c928181169182156101e4575b60209182861084146101d0578587528694936020860193929181156101b15750600114610156575b505050610153925003826100d3565b90565b60008080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639690945091905b82851061019b57505050610153935001388080610144565b8654858501529586019587955093810193610183565b925050506101539491925060ff19168252151560051b01388080610144565b634e487b7160e01b85526022600452602485fd5b93607f169361011c565b919082519283825260005b84811061021a575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016101f9565b9060206101539281815201906101ee565b503461000e57600036600319011261000e576020600254604051908152f35b600435906001600160a01b038216820361000e57565b503461000e57602036600319011261000e576001600160a01b0361029661025e565b1660005260046020526020604060002054604051908152f35b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b503461000e576000806003193601126100b9576040519080600190815480831c928082169283156103c7575b60209283861085146103b35785885260208801949081156103925750600114610339575b6100b5876100a9818903826100d3565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b83861061038157505050910190506100a9826100b53880610329565b805485870152948201948101610365565b60ff191685525050505090151560051b0190506100a9826100b53880610329565b634e487b7160e01b82526022600452602482fd5b93607f1693610305565b503461000e57604036600319011261000e576103eb61025e565b602435336000526004602052806040600020541061047f576104168183336104116104d2565b610571565b61041f336104b8565b61042a82825461054d565b9055610435826104b8565b610440828254610564565b90556040519081526001600160a01b03919091169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3005b60405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b6044820152606490fd5b6001600160a01b0316600090815260046020526040902090565b60405190606082016001600160401b03811183821017610529575b60405260248252636b656e7360e01b6040837f5472616e7366657272696e672066726f6d20257320746f20257320257320746f60208201520152565b6105316100bc565b6104ed565b50634e487b7160e01b600052601160045260246000fd5b9190820391821161055a57565b610562610536565b565b9190820180921161055a57565b90926105ce60009485946040519384926105a46020850197638ef3f39960e01b89526080602487015260a48601906101ee565b6001600160a01b03918216604486015292166064840152608483015203601f1981018352826100d3565b51906a636f6e736f6c652e6c6f675afa5056fea264697066735822122013d340d296f641da7b75cf7b7f4b66be0fc78077855a9832b7abb35efaded8bc64736f6c63430008110033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
